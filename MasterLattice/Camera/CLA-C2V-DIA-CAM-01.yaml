# REMEMBER you need  "key  : value" the __space__ either side of : is required !!! 
controls_information:
    PV: true
    pv_record_map:
        HDF_WriteFile_RBV    : CLA-C2V-DIA-CAM-01:HDF:WriteFile_RBV
        HDF_WriteStatus    : CLA-C2V-DIA-CAM-01:HDF:WriteStatus
        HDF_WriteMessage    : CLA-C2V-DIA-CAM-01:HDF:WriteMessage
        HDF_NumCaptured_RBV    : CLA-C2V-DIA-CAM-01:HDF:NumCaptured_RBV
        HDF_Capture_RBV    : CLA-C2V-DIA-CAM-01:HDF:Capture_RBV
        CAM_Acquire_RBV    : CLA-C2V-DIA-CAM-01:CAM:Acquire_RBV
        HDF_NumCapture_RBV    : CLA-C2V-DIA-CAM-01:HDF:NumCapture_RBV
        MAGICK_NumCaptured_RBV    : CLA-C2V-DIA-CAM-01:MAGICK:NumCaptured_RBV
        MAGICK_WriteFile_RBV    : CLA-C2V-DIA-CAM-01:MAGICK:WriteFile_RBV
        MAGICK_WriteStatus    : CLA-C2V-DIA-CAM-01:MAGICK:WriteStatus
        MAGICK_WriteMessage    : CLA-C2V-DIA-CAM-01:MAGICK:WriteMessage
        MAGICK_Capture_RBV    : CLA-C2V-DIA-CAM-01:MAGICK:Capture_RBV
        MAGICK_NumCapture_RBV    : CLA-C2V-DIA-CAM-01:MAGICK:NumCapture_RBV
        ANA_StepSize_RBV    : CLA-C2V-DIA-CAM-01:ANA:StepSize_RBV
        ANA_EnableCallbacks_RBV    : CLA-C2V-DIA-CAM-01:ANA:EnableCallbacks_RBV
        ANA_UseBkgrnd    : CLA-C2V-DIA-CAM-01:ANA:UseBkgrnd
        ANA_UseNPoint    : CLA-C2V-DIA-CAM-01:ANA:UseNPoint
        ANA_X_RBV    : CLA-C2V-DIA-CAM-01:ANA:X_RBV
        ANA_Y_RBV    : CLA-C2V-DIA-CAM-01:ANA:Y_RBV
        ANA_SigmaX_RBV    : CLA-C2V-DIA-CAM-01:ANA:SigmaX_RBV
        ANA_SigmaY_RBV    : CLA-C2V-DIA-CAM-01:ANA:SigmaY_RBV
        ANA_CovXY_RBV    : CLA-C2V-DIA-CAM-01:ANA:CovXY_RBV
        ANA_AvgIntensity_RBV    : CLA-C2V-DIA-CAM-01:ANA:AvgIntensity_RBV
        ANA_Intensity_RBV    : CLA-C2V-DIA-CAM-01:ANA:Intensity_RBV
        ANA_XPix_RBV    : CLA-C2V-DIA-CAM-01:ANA:XPix_RBV
        ANA_YPix_RBV    : CLA-C2V-DIA-CAM-01:ANA:YPix_RBV
        ANA_SigmaXPix_RBV    : CLA-C2V-DIA-CAM-01:ANA:SigmaXPix_RBV
        ANA_SigmaYPix_RBV    : CLA-C2V-DIA-CAM-01:ANA:SigmaYPix_RBV
        ANA_CovXYPix_RBV    : CLA-C2V-DIA-CAM-01:ANA:CovXYPix_RBV
        ANA_PixelResults_RBV    : CLA-C2V-DIA-CAM-01:ANA:PixelResults_RBV
        ANA_MaskXCenter_RBV    : CLA-C2V-DIA-CAM-01:ANA:MaskXCenter_RBV
        ANA_MaskYCenter_RBV    : CLA-C2V-DIA-CAM-01:ANA:MaskYCenter_RBV
        ANA_MaskXRad_RBV    : CLA-C2V-DIA-CAM-01:ANA:MaskXRad_RBV
        ANA_MaskYRad_RBV    : CLA-C2V-DIA-CAM-01:ANA:MaskYRad_RBV
        ANA_CenterX_RBV    : CLA-C2V-DIA-CAM-01:ANA:CenterX_RBV
        ANA_CenterY_RBV    : CLA-C2V-DIA-CAM-01:ANA:CenterY_RBV
        ANA_PixMM_RBV    : CLA-C2V-DIA-CAM-01:ANA:PixMM_RBV
        CAM_AcquireTime_RBV    : CLA-C2V-DIA-CAM-01:CAM:AcquireTime_RBV
        CAM_AcquirePeriod_RBV    : CLA-C2V-DIA-CAM-01:CAM:AcquirePeriod_RBV
        CAM_ArrayRate_RBV    : CLA-C2V-DIA-CAM-01:CAM:ArrayRate_RBV
        CAM_Temperature_RBV    : CLA-C2V-DIA-CAM-01:CAM:Temperature_RBV
        HDF_FilePath    : CLA-C2V-DIA-CAM-01:HDF:FilePath
        HDF_FileName    : CLA-C2V-DIA-CAM-01:HDF:FileName
        HDF_FileNumber    : CLA-C2V-DIA-CAM-01:HDF:FileNumber
        HDF_WriteFile    : CLA-C2V-DIA-CAM-01:HDF:WriteFile
        CAM_Acquire    : CLA-C2V-DIA-CAM-01:CAM:Acquire
        CAM_Acquire    : CLA-C2V-DIA-CAM-01:CAM:Acquire
        HDF_Capture    : CLA-C2V-DIA-CAM-01:HDF:Capture
        HDF_NumCapture    : CLA-C2V-DIA-CAM-01:HDF:NumCapture
        MAGICK_FileName    : CLA-C2V-DIA-CAM-01:MAGICK:FileName
        MAGICK_FilePath    : CLA-C2V-DIA-CAM-01:MAGICK:FilePath
        MAGICK_FileNumber    : CLA-C2V-DIA-CAM-01:MAGICK:FileNumber
        MAGICK_Capture    : CLA-C2V-DIA-CAM-01:MAGICK:Capture
        MAGICK_WriteFile    : CLA-C2V-DIA-CAM-01:MAGICK:WriteFile
        MAGICK_NumCapture    : CLA-C2V-DIA-CAM-01:MAGICK:NumCapture
        ANA_StepSize    : CLA-C2V-DIA-CAM-01:ANA:StepSize
        ANA_EnableCallbacks    : CLA-C2V-DIA-CAM-01:ANA:EnableCallbacks
        ANA_NewBkgrnd    : CLA-C2V-DIA-CAM-01:ANA:NewBkgrnd
        ANA_UseBkgrnd    : CLA-C2V-DIA-CAM-01:ANA:UseBkgrnd
        ANA_UseNPoint    : CLA-C2V-DIA-CAM-01:ANA:UseNPoint
        CAM2_ArrayData    : CLA-C2V-DIA-CAM-01:CAM2:ArrayData
        ANA_MaskXCenter    : CLA-C2V-DIA-CAM-01:ANA:MaskXCenter
        ANA_MaskYCenter    : CLA-C2V-DIA-CAM-01:ANA:MaskYCenter
        ANA_MaskXRad    : CLA-C2V-DIA-CAM-01:ANA:MaskXRad
        ANA_MaskYRad    : CLA-C2V-DIA-CAM-01:ANA:MaskYRad
        ANA_CenterX    : CLA-C2V-DIA-CAM-01:ANA:CenterX
        ANA_CenterY    : CLA-C2V-DIA-CAM-01:ANA:CenterY
        ANA_PixMM    : CLA-C2V-DIA-CAM-01:ANA:PixMM
        LED_Sta    : CLA-LAS-DIA-LED-01:Sta
        LED_On : CLA-LAS-DIA-LED-01:On
        LED_Off : CLA-LAS-DIA-LED-01:Off
properties:
    hardware_type: Camera
    machine_area : INJ
    name : CLA-C2V-DIA-CAM-01
    name_alias: C2V-CAM-01, C2V-CAM1  # include screen names here as well 
    CAM_TYPE : CLARA_CAM 
    SCREEN_NAME : C2V-SCR-01 # which screen is the camera looking at 
    IP_ADDRESS_STREAM : "" 
    MAX_SHOTS_NUMBER  :	600 # max number of shots that can be taken in a single burst 
    ## these are the indices of each value in the array PixelResults_RBV
    RESULTS_COUNT : 5 #
    X_POS : 0 #
    Y_POS : 1 #
    X_SIGMA_POS : 2 #
    Y_SIGMA_POS : 3 #
    COV_POS : 4 #
    ## these are the names of each value in the array PixelResults_RBV to be keys for a python dictionary
    X_NAME : X
    Y_NAME : Y
    X_SIGMA_NAME : X_SIGMA
    Y_SIGMA_NAME : Y_SIGMA
    COV_NAME : COV
    X_MASK_DEF				: 1280 #; some default values, better values  are to be determined
    Y_MASK_DEF				: 1080 #; some default values, better values  are to be determined
    X_MASK_RAD_DEF			: 1240 #some default values, better values  are to be determined
    Y_MASK_RAD_DEF			: 1040 #some default values, better values  are to be determined
    X_MASK_RAD_MAX			: 300 ##max value of mask radius 
    Y_MASK_RAD_MAX			: 300 #max value of mask radius
    USE_MASK_RAD_LIMITS : TRUE #; shoudl use mask max values
    ARRAY_DATA_NUM_PIX_X : 1280 #; array data passed through EPICS
    ARRAY_DATA_NUM_PIX_Y : 1080 #; array data passed through EPICS
    BINARY_NUM_PIX_X : 2560 #; the binary image is bigger than the array data passed through EPICS
    BINARY_NUM_PIX_Y : 2160 #; the binary image is bigger than the array data passed through EPICS
    X_PIX_SCALE_FACTOR : 2 #; scaling from array_data num pixels to binary image data num pixels
    Y_PIX_SCALE_FACTOR : 2 #; 
    AVG_PIXEL_VALUE_FOR_BEAM : 97.2 #;  emprically determined value for when laser is present
    X_CENTER_DEF      : 0 #;    where is (0,0) ? TBD
    Y_CENTER_DEF      : 0 #;
    PIX_2_MM_RATIO_DEF : 0.006 #; !!! from wiki 
    ARRAY_DATA_X_PIX_2_MM : 0.006 #; 
    ARRAY_DATA_Y_PIX_2_MM :  0.006 #;
    SENSOR_MAX_TEMP : 27.0 #;
    SENSOR_MIN_TEMP : 5.0 #;
    MIN_X_PIXEL_POS : 150.0 #; these are used to decide if the beam is close to the edge    float  as analysis results in pixels returns float  
    MAX_X_PIXEL_POS : 2400.0 #; these are used to decide if the beam is close to the edge
    MIN_Y_PIXEL_POS : 150.0 #;  these are used to decide if the beam is close to the edge
    MAX_Y_PIXEL_POS : 2000.0 #; these are used to decide if the beam is close to the edge



# PV_IA_SUFFIX_X_RBV		= ANA:X_RBV;
# PV_IA_SUFFIX_Y_RBV		= ANA:Y_RBV;
# PV_IA_SUFFIX_SIGMA_X_RBV= ANA:SigmaX_RBV;
# PV_IA_SUFFIX_SIGMA_Y_RBV= ANA:SigmaY_RBV;
# PV_IA_SUFFIX_COV_XY_RBV = ANA:CovXY_RBV;
# PV_IA_SUFFIX_X_PIX_RBV	= ANA:XPix_RBV;
# PV_IA_SUFFIX_Y_PIX_RBV	= ANA:YPix_RBV;
# PV_IA_SUFFIX_SIGMA_X_PIX_RBV= ANA:SigmaXPix_RBV;
# PV_IA_SUFFIX_SIGMA_Y_PIX_RBV= ANA:SigmaYPix_RBV;
# PV_IA_SUFFIX_COV_XY_PIX_RBV	= ANA:CovXYPix_RBV;
# PV_IA_SUFFIX_SUM_PIX_INTENSITY_RBV = ANA:Intensity_RBV;
# PV_IA_SUFFIX_AV_PIX_INTENSITY_RBV = ANA:AvgIntensity_RBV;
# PV_IA_SUFFIX_PIXEL_RESULTS_RBV = ANA:PixelResults_RBV;
# PV_IA_SUFFIX_MASK_X_RAD_RBV = ANA:MaskXRad_RBV;
# PV_IA_SUFFIX_MASK_Y_RAD_RBV = ANA:MaskYRad_RBV;
# PV_IA_SUFFIX_MASK_X_RBV = ANA:MaskXCenter_RBV;
# PV_IA_SUFFIX_MASK_Y_RBV = ANA:MaskYCenter_RBV;
# PV_IA_SUFFIX_PIX_MM_RBV = ANA:PixMM_RBV;
# PV_IA_SUFFIX_CENTER_X_RBV = ANA:CenterX_RBV;
# PV_IA_SUFFIX_CENTER_Y_RBV = ANA:CenterY_RBV;
# PV_IA_SUFFIX_STEP_SIZE_RBV 	= ANA:StepSize_RBV;
# PV_IA_SUFFIX_START_IA_RBV= ANA:EnableCallbacks_RBV;
# PV_IA_SUFFIX_USE_B_RBV	= ANA:UseBkgrnd;
# PV_IA_SUFFIX_USE_NPOINT_RBV	= ANA:UseNPoint;
# PV_DAQ_SUFFIX_ACQUIRE_RBV= CAM:Acquire_RBV;
# PV_DAQ_SUFFIX_CAPTURE_RBV	= HDF:Capture_RBV;
# PV_DAQ_SUFFIX_NUM_CAPTURED_RBV	= HDF:NumCaptured_RBV;
# PV_DAQ_SUFFIX_NUM_CAPTURE_RBV = HDF:NumCapture_RBV;
# PV_DAQ_SUFFIX_WRITE_STATUS 	= HDF:WriteStatus;
# PV_DAQ_SUFFIX_WRITE_FILE_RBV 	= HDF:WriteFile_RBV;
# PV_DAQ_SUFFIX_WRITE_MESSAGE = HDF:WriteMessage;
# PV_DAQ_SUFFIX_CAPTURE_RBV_J	= MAGICK:Capture_RBV;
# PV_DAQ_SUFFIX_NUM_CAPTURED_J	= MAGICK:NumCaptured_RBV;
# PV_DAQ_SUFFIX_NUM_CAPTURE_RBV_J = MAGICK:NumCapture_RBV;
# PV_DAQ_SUFFIX_WRITE_CHECK_J 	= MAGICK:WriteStatus;
# PV_DAQ_SUFFIX_WRITE_RBV_J 	= MAGICK:WriteFile_RBV;
# PV_DAQ_SUFFIX_WRITE_MESSAGE_J = MAGICK:WriteMessage;
# PV_DAQ_SUFFIX_EXPOSURE_RBV 	= CAM:AcquireTime_RBV;
# PV_DAQ_SUFFIX_ACQ_PERIOD_RBV = CAM:AcquirePeriod_RBV;
# PV_DAQ_SUFFIX_FREQ_RBV 		= CAM:ArrayRate_RBV;
# PV_DAQ_SUFFIX_SENSOR_TEMP_RBV = CAM:Temperature_RBV;
# PV_SUFFIX_LED_STA = CLA-LAS-DIA-LED-01:Sta;
# ;PV_IA_SUFFIX_START_ACQUIRE = CAM:Acquire;
# ;PV_IA_SUFFIX_STOP_ACQUIRE = CAM:Acquire;
# PV_SUFFIX_DATA 	= CAM2:ArrayData;
# PV_IA_SUFFIX_START_IA   = ANA:EnableCallbacks;
# PV_IA_SUFFIX_SET_B      = ANA:NewBkgrnd;
# PV_IA_SUFFIX_USE_B      = ANA:UseBkgrnd;
# PV_IA_SUFFIX_USE_NPOINT = ANA:UseNPoint;
# PV_IA_SUFFIX_CENTER_X 	= ANA:CenterX;#pixel offset centre 
# PV_IA_SUFFIX_CENTER_Y 	= ANA:CenterY;
# PV_IA_SUFFIX_PIX_MM 	= ANA:PixMM;
# PV_IA_SUFFIX_STEP_SIZE 	= ANA:StepSize;
# PV_IA_SUFFIX_MASK_X = ANA:MaskXCenter;
# PV_IA_SUFFIX_MASK_Y = ANA:MaskYCenter;
# PV_IA_SUFFIX_MASK_X_RAD = ANA:MaskXRad;
# PV_IA_SUFFIX_MASK_Y_RAD = ANA:MaskYRad;
# PV_DAQ_SUFFIX_START_ACQUIRE= CAM:Acquire;
# PV_DAQ_SUFFIX_STOP_ACQUIRE   = CAM:Acquire;
# PV_DAQ_SUFFIX_FILE_PATH 	= HDF:FilePath;
# PV_DAQ_SUFFIX_FILE_NAME 	= HDF:FileName;
# PV_DAQ_SUFFIX_CAPTURE 		= HDF:Capture;
# PV_DAQ_SUFFIX_FILE_NUMBER 	= HDF:FileNumber;
# PV_DAQ_SUFFIX_WRITE 		= HDF:WriteFile;
# PV_DAQ_SUFFIX_NUM_CAPTURE 	= HDF:NumCapture;
# PV_DAQ_SUFFIX_FILE_PATH_J 	= MAGICK:FilePath;
# PV_DAQ_SUFFIX_FILE_NAME_J 	= MAGICK:FileName;
# PV_DAQ_SUFFIX_CAPTURE_J 	= MAGICK:Capture;
# PV_DAQ_SUFFIX_FILE_NUMBER_J 	= MAGICK:FileNumber;
# PV_DAQ_SUFFIX_WRITE_J 	= MAGICK:WriteFile;
# PV_DAQ_SUFFIX_NUM_CAPTURE_J = MAGICK:NumCapture;
# PV_SUFFIX_LED_ON = CLA-LAS-DIA-LED-01:On;
# PV_SUFFIX_LED_OFF = CLA-LAS-DIA-LED-01:Off;

















# PV_IA_SUFFIX_X_RBV		= ANA:X_RBV;
# PV_CHTYPE      			= DBR_TIME_DOUBLE;
# PV_COUNT            	= 1;
# PV_MASK             	= DBE_VALUE;
# ;2
# PV_IA_SUFFIX_Y_RBV		= ANA:Y_RBV;
# PV_CHTYPE      			= DBR_TIME_DOUBLE;
# PV_COUNT            	= 1;
# PV_MASK             	= DBE_VALUE;
# ;3
# PV_IA_SUFFIX_SIGMA_X_RBV= ANA:SigmaX_RBV;
# PV_CHTYPE      			= DBR_TIME_DOUBLE;
# PV_COUNT            	= 1;
# PV_MASK             	= DBE_VALUE;
# ;4
# PV_IA_SUFFIX_SIGMA_Y_RBV= ANA:SigmaY_RBV;
# PV_CHTYPE      			= DBR_TIME_DOUBLE;
# PV_COUNT            	= 1;
# PV_MASK             	= DBE_VALUE;
# ;5
# PV_IA_SUFFIX_COV_XY_RBV = ANA:CovXY_RBV;
# PV_CHTYPE      			= DBR_TIME_DOUBLE;
# PV_COUNT            	= 1;
# PV_MASK             	= DBE_VALUE;
# ;6
# PV_IA_SUFFIX_X_PIX_RBV	= ANA:XPix_RBV;
# PV_CHTYPE      			= DBR_TIME_DOUBLE;
# PV_COUNT            	= 1;
# PV_MASK             	= DBE_VALUE;
# ;7
# PV_IA_SUFFIX_Y_PIX_RBV	= ANA:YPix_RBV;
# PV_CHTYPE      			= DBR_TIME_DOUBLE;
# PV_COUNT            	= 1;
# PV_MASK             	= DBE_VALUE;
# ;8
# PV_IA_SUFFIX_SIGMA_X_PIX_RBV= ANA:SigmaXPix_RBV;
# PV_CHTYPE      			= DBR_TIME_DOUBLE;
# PV_COUNT            	= 1;
# PV_MASK             	= DBE_VALUE;
# ;9
# PV_IA_SUFFIX_SIGMA_Y_PIX_RBV= ANA:SigmaYPix_RBV;
# PV_CHTYPE      			= DBR_TIME_DOUBLE;
# PV_COUNT            	= 1;
# PV_MASK             	= DBE_VALUE;
# ;10
# PV_IA_SUFFIX_COV_XY_PIX_RBV	= ANA:CovXYPix_RBV;
# PV_CHTYPE      			= DBR_TIME_DOUBLE;
# PV_COUNT            	= 1;
# PV_MASK             	= DBE_VALUE;
# ;11
# PV_IA_SUFFIX_SUM_PIX_INTENSITY_RBV = ANA:Intensity_RBV;
# PV_CHTYPE      			= DBR_TIME_DOUBLE;
# PV_COUNT            	= 1;
# PV_MASK             	= DBE_VALUE;
# ;12
# PV_IA_SUFFIX_AV_PIX_INTENSITY_RBV = ANA:AvgIntensity_RBV;
# PV_CHTYPE      			= DBR_TIME_DOUBLE;
# PV_COUNT            	= 1;
# PV_MASK             	= DBE_VALUE;
# ;13
# PV_IA_SUFFIX_PIXEL_RESULTS_RBV = ANA:PixelResults_RBV;
# PV_CHTYPE      			= DBR_TIME_DOUBLE;
# PV_COUNT            	= 5;should be 7 when controls add in all analysis results !!!
# PV_MASK             	= DBE_VALUE;
# ; mask read backs
# ;14
# PV_IA_SUFFIX_MASK_X_RAD_RBV = ANA:MaskXRad_RBV;
# PV_CHTYPE      			= DBR_LONG;
# PV_COUNT            	= 1;
# PV_MASK             	= DBE_VALUE;
# ;15
# PV_IA_SUFFIX_MASK_Y_RAD_RBV = ANA:MaskYRad_RBV;
# PV_CHTYPE      			= DBR_LONG;
# PV_COUNT            	= 1;
# PV_MASK             	= DBE_VALUE;
# ;16
# PV_IA_SUFFIX_MASK_X_RBV = ANA:MaskXCenter_RBV;
# PV_CHTYPE      			= DBR_LONG;
# PV_COUNT            	= 1;
# PV_MASK             	= DBE_VALUE;
# ;17
# PV_IA_SUFFIX_MASK_Y_RBV = ANA:MaskYCenter_RBV;
# PV_CHTYPE      			= DBR_LONG;
# PV_COUNT            	= 1;
# PV_MASK             	= DBE_VALUE;
# ;18
# PV_IA_SUFFIX_PIX_MM_RBV = ANA:PixMM_RBV;
# PV_CHTYPE      			= DBR_LONG;
# PV_COUNT            	= 1;
# PV_MASK             	= DBE_VALUE;
# ;19
# PV_IA_SUFFIX_CENTER_X_RBV = ANA:CenterX_RBV;
# PV_CHTYPE      			= DBR_LONG;
# PV_COUNT            	= 1;
# PV_MASK             	= DBE_VALUE;
# ;20
# PV_IA_SUFFIX_CENTER_Y_RBV = ANA:CenterY_RBV;
# PV_CHTYPE      			= DBR_LONG;
# PV_COUNT            	= 1;
# PV_MASK             	= DBE_VALUE;
# ;21
# PV_IA_SUFFIX_STEP_SIZE_RBV 	= ANA:StepSize_RBV;
# PV_CHTYPE      			= DBR_LONG;
# PV_COUNT            	= 1;
# PV_MASK             	= DBE_VALUE
# ; analysis states
# ;22
# PV_IA_SUFFIX_START_IA_RBV= ANA:EnableCallbacks_RBV;
# PV_CHTYPE   			= DBR_ENUM;
# PV_COUNT    			= 1;
# PV_MASK					= DBE_VALUE;
# ;23
# PV_IA_SUFFIX_USE_B_RBV	= ANA:UseBkgrnd;
# PV_CHTYPE   			= DBR_ENUM;
# PV_COUNT    			= 1;
# PV_MASK					= DBE_VALUE;
# ;24
# PV_IA_SUFFIX_USE_NPOINT_RBV	= ANA:UseNPoint;
# PV_CHTYPE   			= DBR_ENUM;
# PV_COUNT    			= 1;
# PV_MASK					= DBE_VALUE;
# ;acquire readbacks
# ;25
# PV_DAQ_SUFFIX_ACQUIRE_RBV= CAM:Acquire_RBV;
# PV_CHTYPE   			= DBR_ENUM;
# PV_COUNT    			= 1;
# PV_MASK					= DBE_VALUE;
# ;26
# PV_DAQ_SUFFIX_CAPTURE_RBV	= HDF:Capture_RBV;
# PV_CHTYPE      			= DBR_ENUM;
# PV_COUNT            	= 1;
# PV_MASK             	= DBE_VALUE;
# ;27
# PV_DAQ_SUFFIX_NUM_CAPTURED_RBV	= HDF:NumCaptured_RBV;
# PV_CHTYPE      			= DBR_LONG;
# PV_COUNT            	= 1;
# PV_MASK             	= DBE_VALUE;
# ;28
# PV_DAQ_SUFFIX_NUM_CAPTURE_RBV = HDF:NumCapture_RBV;
# PV_CHTYPE      			= DBR_LONG;
# PV_COUNT            	= 1;
# PV_MASK             	= DBE_VALUE;
# ;29
# PV_DAQ_SUFFIX_WRITE_STATUS 	= HDF:WriteStatus;
# PV_CHTYPE      			= DBR_ENUM;
# PV_COUNT            	= 1;
# PV_MASK             	= DBE_VALUE;
# ;30
# PV_DAQ_SUFFIX_WRITE_FILE_RBV 	= HDF:WriteFile_RBV;
# PV_CHTYPE      			= DBR_ENUM;
# PV_COUNT            	= 1;
# PV_MASK             	= DBE_VALUE;
# ;31
# PV_DAQ_SUFFIX_WRITE_MESSAGE = HDF:WriteMessage;
# PV_CHTYPE      			= DBR_CHAR;
# PV_COUNT            	= 256;
# PV_MASK             	= DBE_VALUE;
# ;32
# #################################JPEG MONITORS###################################
# PV_DAQ_SUFFIX_CAPTURE_RBV_J	= MAGICK:Capture_RBV;
# PV_CHTYPE      			= DBR_ENUM;
# PV_COUNT            	= 1;
# PV_MASK             	= DBE_VALUE;
# ;33
# PV_DAQ_SUFFIX_NUM_CAPTURED_J	= MAGICK:NumCaptured_RBV;
# PV_CHTYPE      			= DBR_LONG;
# PV_COUNT            	= 1;
# PV_MASK             	= DBE_VALUE;
# ;34
# PV_DAQ_SUFFIX_NUM_CAPTURE_RBV_J = MAGICK:NumCapture_RBV;
# PV_CHTYPE      			= DBR_LONG;
# PV_COUNT            	= 1;
# PV_MASK             	= DBE_VALUE;
# ;35
# PV_DAQ_SUFFIX_WRITE_CHECK_J 	= MAGICK:WriteStatus;
# PV_CHTYPE      			= DBR_ENUM;
# PV_COUNT            	= 1;
# PV_MASK             	= DBE_VALUE;
# ;36
# PV_DAQ_SUFFIX_WRITE_RBV_J 	= MAGICK:WriteFile_RBV;
# PV_CHTYPE      			= DBR_ENUM;
# PV_COUNT            	= 1;
# PV_MASK             	= DBE_VALUE;
# ;37
# PV_DAQ_SUFFIX_WRITE_MESSAGE_J = MAGICK:WriteMessage;
# PV_CHTYPE      			= DBR_CHAR;
# PV_COUNT            	= 256;
# PV_MASK             	= DBE_VALUE;
# ;##################################DAQ 
# ;38
# PV_DAQ_SUFFIX_EXPOSURE_RBV 	= CAM:AcquireTime_RBV;
# PV_CHTYPE      			= DBR_DOUBLE;
# PV_COUNT            	= 1;
# PV_MASK             	= DBE_VALUE;
# ;39
# PV_DAQ_SUFFIX_ACQ_PERIOD_RBV = CAM:AcquirePeriod_RBV;
# PV_CHTYPE      			= DBR_DOUBLE;
# PV_COUNT            	= 1;
# PV_MASK             	= DBE_VALUE;
# ;40
# PV_DAQ_SUFFIX_FREQ_RBV 		= CAM:ArrayRate_RBV;
# PV_CHTYPE      			= DBR_DOUBLE;
# PV_COUNT            	= 1;
# PV_MASK             	= DBE_VALUE;
# ;41
# PV_DAQ_SUFFIX_SENSOR_TEMP_RBV = CAM:Temperature_RBV;
# PV_CHTYPE      			= DBR_DOUBLE;
# PV_COUNT            	= 1;
# PV_MASK             	= DBE_VALUE;

# PV_SUFFIX_LED_STA = CLA-LAS-DIA-LED-01:Sta;
# PV_CHTYPE      			= DBR_ENUM;
# PV_COUNT            	= 1;
# PV_MASK             	= DBE_VALUE;


# PV_COMMANDS_START;

# ;1  ????
# ;PV_IA_SUFFIX_START_ACQUIRE = CAM:Acquire;
# ;PV_CHTYPE      			= DBR_ENUM;
# ;PV_COUNT            	= 1;
# ;PV_MASK             	= DBE_VALUE;
# ;2  ????
# ;PV_IA_SUFFIX_STOP_ACQUIRE = CAM:Acquire;
# ;PV_CHTYPE      			= DBR_ENUM;
# ;PV_COUNT            	= 1;
# ;PV_MASK             	= DBE_VALUE;



# PV_SUFFIX_DATA 	= CAM2:ArrayData;
# PV_CHTYPE      			= DBR_TIME_LONG;
# PV_COUNT            	= 1382400;
# PV_MASK             	= DBE_VALUE;

# ;1
# PV_IA_SUFFIX_START_IA   = ANA:EnableCallbacks;
# PV_CHTYPE      			= DBR_ENUM;
# PV_COUNT            	= 1;
# PV_MASK             	= DBE_VALUE;
# ;2
# PV_IA_SUFFIX_SET_B      = ANA:NewBkgrnd;
# PV_CHTYPE      			= DBR_ENUM;
# PV_COUNT            	= 1;
# PV_MASK             	= DBE_VALUE;
# ;3
# PV_IA_SUFFIX_USE_B      = ANA:UseBkgrnd;
# PV_CHTYPE      			= DBR_ENUM;
# PV_COUNT            	= 1;
# PV_MASK             	= DBE_VALUE;
# ;4
# PV_IA_SUFFIX_USE_NPOINT = ANA:UseNPoint;
# PV_CHTYPE      			= DBR_ENUM;
# PV_COUNT            	= 1;
# PV_MASK             	= DBE_VALUE;
# ;5
# PV_IA_SUFFIX_CENTER_X 	= ANA:CenterX;#pixel offset centre 
# PV_CHTYPE      			= DBR_LONG;
# PV_COUNT            	= 1;
# PV_MASK             	= DBE_VALUE;
# ;6
# PV_IA_SUFFIX_CENTER_Y 	= ANA:CenterY;
# PV_CHTYPE      			= DBR_LONG;
# PV_COUNT            	= 1;
# PV_MASK             	= DBE_VALUE;
# ;7
# PV_IA_SUFFIX_PIX_MM 	= ANA:PixMM;
# PV_CHTYPE      			= DBR_DOUBLE;
# PV_COUNT            	= 1;
# PV_MASK             	= DBE_VALUE;
# ;8
# PV_IA_SUFFIX_STEP_SIZE 	= ANA:StepSize;
# PV_CHTYPE      			= DBR_LONG;
# PV_COUNT            	= 1;
# PV_MASK             	= DBE_VALUE;
# ;9

# ;10
# PV_IA_SUFFIX_MASK_X = ANA:MaskXCenter;
# PV_CHTYPE      			= DBR_LONG;
# PV_COUNT            	= 1;
# PV_MASK             	= DBE_VALUE;
# ;11
# PV_IA_SUFFIX_MASK_Y = ANA:MaskYCenter;
# PV_CHTYPE      			= DBR_LONG;
# PV_COUNT            	= 1;
# PV_MASK             	= DBE_VALUE;
# ;12
# PV_IA_SUFFIX_MASK_X_RAD = ANA:MaskXRad;
# PV_CHTYPE      			= DBR_LONG;
# PV_COUNT            	= 1;
# PV_MASK             	= DBE_VALUE;
# ;13
# PV_IA_SUFFIX_MASK_Y_RAD = ANA:MaskYRad;
# PV_CHTYPE      			= DBR_LONG;
# PV_COUNT            	= 1;
# PV_MASK             	= DBE_VALUE;
# ;14
# PV_DAQ_SUFFIX_START_ACQUIRE= CAM:Acquire;
# PV_CHTYPE      			= DBR_ENUM;
# PV_COUNT            	= 1;
# PV_MASK             	= DBE_VALUE;
# ;15
# PV_DAQ_SUFFIX_STOP_ACQUIRE   = CAM:Acquire;
# PV_CHTYPE      			= DBR_ENUM;
# PV_COUNT            	= 1;
# PV_MASK             	= DBE_VALUE;
# ;16
# PV_DAQ_SUFFIX_FILE_PATH 	= HDF:FilePath;
# PV_CHTYPE      			= DBR_CHAR;
# PV_COUNT            	= 256;
# PV_MASK             	= DBE_VALUE;
# ;17
# PV_DAQ_SUFFIX_FILE_NAME 	= HDF:FileName;
# PV_CHTYPE      			= DBR_CHAR;
# PV_COUNT            	= 256;
# PV_MASK             	= DBE_VALUE;
# ;18
# PV_DAQ_SUFFIX_CAPTURE 		= HDF:Capture;
# PV_CHTYPE      			= DBR_ENUM;
# PV_COUNT            	= 1;
# PV_MASK             	= DBE_VALUE;
# ;19
# PV_DAQ_SUFFIX_FILE_NUMBER 	= HDF:FileNumber;
# PV_CHTYPE      			= DBR_LONG;
# PV_COUNT            	= 1;
# PV_MASK             	= DBE_VALUE;
# ;20
# PV_DAQ_SUFFIX_WRITE 		= HDF:WriteFile;
# PV_CHTYPE      			= DBR_ENUM;
# PV_COUNT            	= 1;
# PV_MASK             	= DBE_VALUE;
# ;21
# PV_DAQ_SUFFIX_NUM_CAPTURE 	= HDF:NumCapture;
# PV_CHTYPE      			= DBR_LONG;
# PV_COUNT            	= 1;
# PV_MASK             	= DBE_VALUE;
# ;22
# PV_DAQ_SUFFIX_FILE_PATH_J 	= MAGICK:FilePath;
# PV_CHTYPE      			= DBR_CHAR;
# PV_COUNT            	= 256;
# PV_MASK             	= DBE_VALUE;
# ;23
# PV_DAQ_SUFFIX_FILE_NAME_J 	= MAGICK:FileName;
# PV_CHTYPE      			= DBR_CHAR;
# PV_COUNT            	= 256;
# PV_MASK             	= DBE_VALUE;
# ;24
# PV_DAQ_SUFFIX_CAPTURE_J 	= MAGICK:Capture;
# PV_CHTYPE      			= DBR_ENUM;
# PV_COUNT            	= 1;
# PV_MASK             	= DBE_VALUE;
# ;25
# PV_DAQ_SUFFIX_FILE_NUMBER_J 	= MAGICK:FileNumber;
# PV_CHTYPE      			= DBR_LONG;
# PV_COUNT            	= 1;
# PV_MASK             	= DBE_VALUE;
# ;26
# PV_DAQ_SUFFIX_WRITE_J 	= MAGICK:WriteFile;
# PV_CHTYPE      			= DBR_ENUM;
# PV_COUNT            	= 1;
# PV_MASK             	= DBE_VALUE;
# ;27
# PV_DAQ_SUFFIX_NUM_CAPTURE_J = MAGICK:NumCapture;
# PV_CHTYPE      			= DBR_LONG;
# PV_COUNT            	= 1;
# PV_MASK             	= DBE_VALUE;

# PV_SUFFIX_LED_ON = CLA-LAS-DIA-LED-01:On;
# PV_CHTYPE      			= DBR_ENUM;
# PV_COUNT            	= 1;
# PV_MASK             	= DBE_VALUE;

# PV_SUFFIX_LED_OFF = CLA-LAS-DIA-LED-01:Off;
# PV_CHTYPE      			= DBR_ENUM;
# PV_COUNT            	= 1;
# PV_MASK             	= DBE_VALUE;

