--- 
cmake_linux: 
  cache: 
    key: "${CI_COMMIT_SHORT_SHA}"
    paths: 
      - build/*
  script: 
    - "mkdir build"
    - "cd build"
    - "cmake ../."
    - "echo 'CMake Finished'"
    - ls
  stage: cmake
  tags: 
    - linux
cmake_windows: 
  cache: 
    key: "${CI_COMMIT_SHORT_SHA}"
    paths: 
      - build/*
  script: 
    - "mkdir build"
    - "cd build"
    - "cmake ../. ."
    - dir
  stage: cmake
  tags: 
    - windows
doxygen: 
  cache: 
    key: "${CI_COMMIT_SHORT_SHA}"
    paths: 
      - build/*
  only: 
    - master
  script: 
    - "cd build"
    - "doxygen ./Docs/cppdocs/Doxyfile.CATAPDocs"
    - "scp -r ./Docs/cppdocs/html/* ujo48515@172.16.114.88:/var/www/html/CATAPcpp"
  stage: doxygen
linx_make: 
  cache: 
    key: "${CI_COMMIT_SHORT_SHA}"
    paths: 
      - build/*
  script: 
    - "cd build/"
    - "make clean"
    - make
    - "echo 'Make Finished'"
  stage: make
  tags: 
    - linux
ms_build: 
  cache: 
    key: "${CI_COMMIT_SHORT_SHA}"
    paths: 
      - build/*
  script: 
    - "cd build"
    - "C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\MSBuild\\Current\\Bin\\MSBuild.exe ALL_BUILD.vcxproj /Configuration=Release"
  stage: make
  tags: 
    - windows
sphinx: 
  cache: 
    key: "${CI_COMMIT_SHORT_SHA}"
    paths: 
      - build/*
  only: 
    - master
  script: 
    - "cd build"
    - "scp -r ./Docs/pydocs/html/* ujo48515@172.16.114.88:/var/www/html/CATAPpy"
  stage: sphinx
stages: 
  - cmake
  - make
  - tests
  - doxygen
  - sphinx
  - wheel
tests: 
  cache: 
    key: "${CI_COMMIT_SHORT_SHA}"
    paths: 
      - build/*
  script: 
    - "cd build"
    - "cd testBin"
    - "echo 'Running Tests..'"
    - "ls ~/MasterLattice"
    - ./ConfigReaderTest
    - ./LoggingSystemTest
    - ./HardwareTests
    - ./FactoryTests
    - ./EPICSInterfaceTests
    - ./EPICSToolsTests
  stage: tests
wheel: 
  cache: 
    key: "${CI_COMMIT_SHORT_SHA}"
    paths: 
      - build/*
  only: 
    - master
  script: 
    - "cd build"
    - "cd ./PythonInterface/CATAP/"
    - ./build_wheel.sh
  stage: wheel
